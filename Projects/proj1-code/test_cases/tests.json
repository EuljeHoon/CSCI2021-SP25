{
    "name": "Project 1",
    "command": "./results_main",
    "prompt": "results>",
    "use_valgrind": "y",
    "tests": [
        {
            "name": "Start, Quit",
            "description": "Starts the program then issues the exit command which should end the program",
            "output_file": "test_cases/output/start_quit.txt",
            "input_file": "test_cases/input/start_quit.txt"
        },
        {
            "name": "Start, Print, Quit",
            "description": "Starts the program, attempts a print command which should cause an error, then issues the exit command which should end the program.",
            "output_file": "test_cases/output/start_print_quit.txt",
            "input_file": "test_cases/input/start_print_quit.txt"
        },
        {
            "name": "Check for End of Input",
            "description": "Checks that the main() loop detects EOF when scanning typed input and exits. When working interactively in a Unix terminal typing Ctrl-d (Control \"d\") will indicate the end of input. When piping a script in this happens automatically. If this test fails, ensure main() is looking for EOF on scanf()/fscanf() calls and exits when detected.",
            "output_file": "test_cases/output/end_input.txt",
            "input_file": "test_cases/input/end_input.txt"
        },
        {
            "name": "Create a New Results Log",
            "description": "Starts the program, creates a new results log with the name \"Goldy5K\" and then issues the command to exit.",
            "output_file": "test_cases/output/create_new.txt",
            "input_file": "test_cases/input/create_new.txt"
        },
        {
            "name": "Create a New Results Log and Print Name",
            "description": "Starts the program, creates a new results log with the name \"Goldy5K\" issues a command to print out the name of the new log, and exits.",
            "output_file": "test_cases/output/create_print.txt",
            "input_file": "test_cases/input/create_print.txt"
        },
        {
            "name": "Print Empty Results Log",
            "description": "Starts the program, creates a new results log with the name \"Goldy5K\", issues commands to print out the name and all participants in the log, and exits.",
            "output_file": "test_cases/output/print_empty.txt",
            "input_file": "test_cases/input/print_empty.txt"
        },
        {
            "name": "Invalid Print",
            "description": "Starts the program and requests to print out results when there is no currently active log.",
            "output_file": "test_cases/output/invalid_print.txt",
            "input_file": "test_cases/input/invalid_print.txt"
        },
        {
            "name": "Invalid Lookup",
            "description": "Starts the program and attempts to look up a participant number when there is no currently active results log, which should yield an error.",
            "output_file": "test_cases/output/invalid_lookup.txt",
            "input_file": "test_cases/input/invalid_lookup.txt"
        },
        {
            "name": "Invalid then Valid Print",
            "description": "Starts the program and requests to print out results when there is no currently active log. Then creates a new empty log and prints out results.",
            "output_file": "test_cases/output/invalid_valid_print.txt",
            "input_file": "test_cases/input/invalid_valid_print.txt"
        },
        {
            "name": "Lookups in Empty Results Log",
            "description": "Attempts to look up several participants numbers in an empty results log. Should get a not found message for any lookup attempt.",
            "output_file": "test_cases/output/empty_lookups.txt",
            "input_file": "test_cases/input/empty_lookups.txt"
        },
        {
            "name": "Invalid Add",
            "description": "Starts the program and attempts to add a new participant result before there is any currently active log.",
            "output_file": "test_cases/output/invalid_add.txt",
            "input_file": "test_cases/input/invalid_add.txt"
        },
        {
            "name": "Add Single Participant 1",
            "description": "Creates a new results log and adds one participant to it with a time over 1 hour.",
            "output_file": "test_cases/output/add_single_1.txt",
            "input_file": "test_cases/input/add_single_1.txt"
        },
        {
            "name": "Add Single Participant 2",
            "description": "Creates a new results log and adds one participant to it with a time under 1 hour and over 1 minute.",
            "output_file": "test_cases/output/add_single_2.txt",
            "input_file": "test_cases/input/add_single_2.txt"
        },
        {
            "name": "Add Single Participant 3",
            "description": "Creates a new results log and adds one participant to it with a time under 1 minute.",
            "output_file": "test_cases/output/add_single_3.txt",
            "input_file": "test_cases/input/add_single_3.txt"
        },
        {
            "name": "Add Multiple Results",
            "description": "Creates a new results log and adds a small number of race participants.",
            "output_file": "test_cases/output/add_multiple.txt",
            "input_file": "test_cases/input/add_multiple.txt"
        },
        {
            "name": "Add and Print Single Result 1",
            "description": "Creates a new results log and adds one participant with a time over 1 hour before printing it out.",
            "output_file": "test_cases/output/add_print_single_1.txt",
            "input_file": "test_cases/input/add_print_single_1.txt"
        },
        {
            "name": "Add and Print Single Result 2",
            "description": "Creates a new results log and adds one participant with a time over 1 minute before printing it out.",
            "output_file": "test_cases/output/add_print_single_2.txt",
            "input_file": "test_cases/input/add_print_single_2.txt"
        },
        {
            "name": "Add and Print Single Result 3",
            "description": "Creates a new results log and adds one participant with a time under 1 minute before printing it out.",
            "output_file": "test_cases/output/add_print_single_3.txt",
            "input_file": "test_cases/input/add_print_single_3.txt"
        },
        {
            "name": "Add and Print Multiple Results",
            "description": "Creates a new results log and adds a small number of participants before printing them out.",
            "output_file": "test_cases/output/add_print_multiple.txt",
            "input_file": "test_cases/input/add_print_multiple.txt"
        },
        {
            "name": "Add and Look Up Participant",
            "description": "Creates a new results log and adds a single participant before looking them up by name.",
            "output_file": "test_cases/output/add_lookup_single.txt",
            "input_file": "test_cases/input/add_lookup_single.txt"
        },
        {
            "name": "Add and Look Up Multiple Participants",
            "description": "Creates a new results log and adds a small number of participants. Then looks up each of the previously added participants.",
            "output_file": "test_cases/output/add_lookup_multiple.txt",
            "input_file": "test_cases/input/add_lookup_multiple.txt"
        },
        {
            "name": "Add and Look Up Multiple Participants 2",
            "description": "Creates a new results log and adds a small number of participants. Then looks up each of the previously added participants as well as non-existent participants.",
            "output_file": "test_cases/output/add_lookup_multiple_2.txt",
            "input_file": "test_cases/input/add_lookup_multiple_2.txt"
        },
        {
            "name": "Clear Before Log Command",
            "description": "Creates a new results log, then clears it, then attempts to print out log name, which should result in an error message.",
            "output_file": "test_cases/output/clear_log.txt",
            "input_file": "test_cases/input/clear_log.txt"
        },
        {
            "name": "Clear Before Print",
            "description": "Creates a new results log, then clears it, then attempts to print out participants, which should result in an error message.",
            "output_file": "test_cases/output/clear_print.txt",
            "input_file": "test_cases/input/clear_print.txt"
        },
        {
            "name": "Clear Before Lookup",
            "description": "Creates a new results log, then clears it, then attempts to look up participants, which should result in error messages.",
            "output_file": "test_cases/output/clear_lookup.txt",
            "input_file": "test_cases/input/clear_lookup.txt"
        },
        {
            "name": "Invalid Clear",
            "description": "Creates a new results log, then clears it, then tries to run the clear command again, which should cause an error.",
            "output_file": "test_cases/output/invalid_clear.txt",
            "input_file": "test_cases/input/invalid_clear.txt"
        },
        {
            "name": "Multiple Clears",
            "description": "Runs the clear command several times in a row to check that all memory is properly freed and no leaks are present.",
            "output_file": "test_cases/output/multi_clear.txt",
            "input_file": "test_cases/input/multi_clear.txt"
        },
        {
            "name": "Non-Existent Text File",
            "description": "Attempts to read a results log from a text file that does not exist.",
            "output_file": "test_cases/output/non_existent_text.txt",
            "input_file": "test_cases/input/non_existent_text.txt"
        },
        {
            "name": "Text File Persistence",
            "description": "Creates a new results log with a small number of participants, then writes the log to a file. Clears, then reads in that file to ensure that an identical results log is recovered from the saved data.",
            "output_file": "test_cases/output/text_file_persistence.txt",
            "input_file": "test_cases/input/text_file_persistence.txt"
        },
        {
            "name": "Invalid Read from Text File",
            "description": "Attempts to read in a new results log from a text file while there is still a currently active log.",
            "output_file": "test_cases/output/invalid_text_read.txt",
            "input_file": "test_cases/input/invalid_text_read.txt"
        },
        {
            "name": "Non-Existent Binary File",
            "description": "Attempts to read from a binary file that does not exist.",
            "output_file": "test_cases/output/non_existent_bin.txt",
            "input_file": "test_cases/input/non_existent_bin.txt"
        },
        {
            "name": "Binary File Persistence",
            "description": "Creates a new results log with a small number of participants, then writes the log to a binary file. Clears, then reads in that file to ensure that an identical results log is recovered from the saved data.",
            "output_file": "test_cases/output/bin_file_persistence.txt",
            "input_file": "test_cases/input/bin_file_persistence.txt"
        },
        {
            "name": "Invalid Read from Binary File",
            "description": "Attempts to read in a new results log from a binary file while there is still a currently active log.",
            "output_file": "test_cases/output/invalid_bin_read.txt",
            "input_file": "test_cases/input/invalid_bin_read.txt"
        },
        {
            "name": "Text and Binary File Combination",
            "description": "Creates a new results log, writes to a text file, clears and creates a second results log, writes to a binary file, clears and loads in log 1 from its text file, then clears and loads in log 2 from its binary file.",
            "output_file": "test_cases/output/text_bin_combo.txt",
            "input_file": "test_cases/input/text_bin_combo.txt"
        },
        {
            "name": "Read Large Results Log from Text File",
            "description": "Reads in a provided file to ensure that the race results system is able to tolerate large text files.",
            "output_file": "test_cases/output/read_large_text.txt",
            "input_file": "test_cases/input/read_large_text.txt"
        },
        {
            "name": "Read Large Results Log from Binary File",
            "description": "Reads in a provided file to ensure that the race results system is able to tolerate large binary files.",
            "output_file": "test_cases/output/read_large_bin.txt",
            "input_file": "test_cases/input/read_large_bin.txt"
        },
        {
            "name": "Read Two Large Files",
            "description": "Reads in results log from a text file and prints contents, then clears it and does the same for a binary file.",
            "output_file": "test_cases/output/two_large_files.txt",
            "input_file": "test_cases/input/two_large_files.txt"
        },
        {
            "name": "Write Large Results Log to Text File",
            "description": "Reads in a large results log from a binary file, then writes the log to a text file. Reloads from the text file and prints contents.",
            "output_file": "test_cases/output/write_large_text.txt",
            "input_file": "test_cases/input/write_large_text.txt"
        },
        {
            "name": "Write Large Results Log to Binary File",
            "description": "Reads in a large results log from text file, then writes the log to a binary file. Reloads from the binary file and prints contents.",
            "output_file": "test_cases/output/write_large_bin.txt",
            "input_file": "test_cases/input/write_large_bin.txt"
        },
        {
            "name": "Text File Command Line Argument",
            "description": "Read in a text file with the name specified from the command line",
            "command": "./results_main RubiksCubeChallenge.txt",
            "output_file": "test_cases/output/text_command_line.txt",
            "input_file": "test_cases/input/text_command_line.txt"
        },
        {
            "name": "Binary File Command Line Argument",
            "description": "Read in a binary file with the name specified from the command line",
            "command": "./results_main Pogopalooza.bin",
            "output_file": "test_cases/output/bin_command_line.txt",
            "input_file": "test_cases/input/bin_command_line.txt"
        },
        {
            "name": "Unknown File Type Command Line Argument",
            "description": "The program receives a file name that does not end in either \".txt\" or \".bin\", which should cause an error.",
            "command": "./results_main Lemmings.exe",
            "output_file": "test_cases/output/unknown_command_line.txt",
            "input_file": "test_cases/input/unknown_command_line.txt"
        }
    ]
}
